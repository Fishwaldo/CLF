#!/usr/bin/perl -w
##########################################################################
# $Id: modprobe,v 1.11 2004/02/03 03:36:39 kirk Exp $
##########################################################################
# $Log: modprobe,v $
# Revision 1.11  2004/02/03 03:36:39  kirk
# Patches from Anssi Kolehmainen <kolean-5.listat@pp.inet.fi>
#
# Revision 1.10  2004/02/03 02:45:26  kirk
# Tons of patches, and new 'oidentd' and 'shaperd' filters from
# Pawe? Go?aszewski" <blues@ds.pg.gda.pl>
#
##########################################################################

########################################################
# This was written and is maintained by:
#    Kirk Bauer <kirk@kaybee.org>
#
# Please send all comments, suggestions, bug reports,
#    etc, to kirk@kaybee.org.
########################################################

#$Detail = $ENV{'LOGWATCH_DETAIL_LEVEL'} || 0;

while (defined($ThisLine = <STDIN>)) {
   chomp($ThisLine);
   if ( $ThisLine =~ s/^modprobe: Can\'t locate module ([\w-]+)\s*$/$1/ ) {
      $Modules{$ThisLine}++;
   } elsif ( $ThisLine =~ s/^FATAL: Module (.*) not found./$1/) {
      $Modules{$ThisLine}++;
   } elsif ( (undef,$Module,$Reason) = ( $ThisLine =~ /(WARNING|FATAL): Error inserting ([^ ]* \([^ ]*\)): (.*)$/ ) ) {
      $ErrorInsert{$Module}{$Reason}++;
   } elsif ( (undef,$Module) = ( $ThisLine =~ /(WARNING|FATAL): Error running install command for (.*)$/ ) ) {
      $ErrorInstall{$Module}++;
   } elsif ( (undef,$Module) = ( $ThisLine =~ /(WARNING|FATAL): Module ([^ ]*) already in kernel./ ) ) {
      $AlreadyLoaded{$Module}++;
   } else {
      $OtherList{$ThisLine}++;
   }
}

if (keys %Modules) {
   print "\nCan't locate these modules:\n";
   foreach my $ThisOne (sort keys %Modules) {
      print "   " . $ThisOne . ": " . $Modules{$ThisOne} . " Time(s)\n";
   }
}

if (keys %ErrorInsert) {
   print "\nErrors inserting modules:\n";
   foreach $Module (sort {$a cmp $b} keys %ErrorInsert) {
      print "   $Module :\n";
      foreach $Reason (sort {$a cmp $b} keys %{$ErrorInsert{$Module}}) {
         print "      $Reason : $ErrorInsert{$Module}{$Reason} Time(s)\n";
      }
   }
}

if (keys %ErrorInstall) {
   print "\nErrors running install command:\n";
   foreach $Module (sort {$a cmp $b} keys %ErrorInstall) {
      print "   $Module : $ErrorInstall{$Module} Time(s)\n";
   }
}

if (keys %AlreadyLoaded) {
   print "\nModules already in kernel:\n";
   foreach $Module (sort {$a cmp $b} keys %AlreadyLoaded) {
      print "   $Module : $AlreadyLoaded{$Module} Time(s)\n";
   }
}

if (keys %OtherList) {
   print "\n**Unmatched Entries**\n";
   foreach $line (sort {$a cmp $b} keys %OtherList) {
      print "$line: $OtherList{$line} Time(s)\n";
   }
}

exit(0);

# vi: shiftwidth=3 tabstop=3 et

